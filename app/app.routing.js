"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var items_component_1 = require("./item/items.component");
var item_detail_component_1 = require("./item/item-detail.component");
var dashboard_component_1 = require("./dashboard/dashboard.component");
var borrower_list_component_1 = require("./borrower-list/borrower-list.component");
var new_borrower_list_component_1 = require("./new-borrower-list/new-borrower-list.component");
var add_transaction_component_1 = require("./add-transaction/add-transaction.component");
var borrower_details_component_1 = require("./borrower-details/borrower-details.component");
var routes = [
    { path: "", redirectTo: "/dashboard", pathMatch: "full" },
    { path: "dashboard", component: dashboard_component_1.DashboardComponent },
    { path: "borrower-list", component: borrower_list_component_1.BorrowerListComponent },
    { path: "new-borrower-list", component: new_borrower_list_component_1.NewBorrowerListComponent },
    { path: "add-transaction/:name/:mode", component: add_transaction_component_1.AddTransactionComponent },
    { path: "borrower-details/:name", component: borrower_details_component_1.BorrowerDetailsComponent },
    { path: "items", component: items_component_1.ItemsComponent },
    { path: "items/item/:id", component: item_detail_component_1.ItemDetailComponent },
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());
exports.AppRoutingModule = AppRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLnJvdXRpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcHAucm91dGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUF5QztBQUN6QyxzREFBdUU7QUFHdkUsMERBQXdEO0FBQ3hELHNFQUFtRTtBQUNuRSx1RUFBbUU7QUFDbkUsbUZBQThFO0FBQzlFLCtGQUF5RjtBQUN6Rix5RkFBb0Y7QUFDcEYsNEZBQXVGO0FBRXZGLElBQU0sTUFBTSxHQUFXO0lBQ25CLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7SUFDekQsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSx3Q0FBa0IsRUFBQztJQUNuRCxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLCtDQUFxQixFQUFDO0lBQzFELEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLFNBQVMsRUFBRSxzREFBd0IsRUFBQztJQUNqRSxFQUFFLElBQUksRUFBRSw2QkFBNkIsRUFBRSxTQUFTLEVBQUUsbURBQXVCLEVBQUM7SUFDMUUsRUFBRSxJQUFJLEVBQUUsd0JBQXdCLEVBQUUsU0FBUyxFQUFFLHFEQUF3QixFQUFDO0lBQ3RFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBRTtJQUM1QyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsMkNBQW1CLEVBQUU7Q0FDN0QsQ0FBQztBQU1GO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixnQkFBZ0I7UUFKNUIsZUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFLENBQUMsaUNBQXdCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25ELE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDO1NBQ3RDLENBQUM7T0FDVyxnQkFBZ0IsQ0FBSTtJQUFELHVCQUFDO0NBQUEsQUFBakMsSUFBaUM7QUFBcEIsNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgUm91dGVzIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuXG5pbXBvcnQgeyBJdGVtc0NvbXBvbmVudCB9IGZyb20gXCIuL2l0ZW0vaXRlbXMuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBJdGVtRGV0YWlsQ29tcG9uZW50IH0gZnJvbSBcIi4vaXRlbS9pdGVtLWRldGFpbC5jb21wb25lbnRcIjtcbmltcG9ydCB7RGFzaGJvYXJkQ29tcG9uZW50fSBmcm9tIFwiLi9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtCb3Jyb3dlckxpc3RDb21wb25lbnR9IGZyb20gXCIuL2JvcnJvd2VyLWxpc3QvYm9ycm93ZXItbGlzdC5jb21wb25lbnRcIjtcbmltcG9ydCB7TmV3Qm9ycm93ZXJMaXN0Q29tcG9uZW50fSBmcm9tIFwiLi9uZXctYm9ycm93ZXItbGlzdC9uZXctYm9ycm93ZXItbGlzdC5jb21wb25lbnRcIjtcbmltcG9ydCB7QWRkVHJhbnNhY3Rpb25Db21wb25lbnR9IGZyb20gXCIuL2FkZC10cmFuc2FjdGlvbi9hZGQtdHJhbnNhY3Rpb24uY29tcG9uZW50XCI7XG5pbXBvcnQge0JvcnJvd2VyRGV0YWlsc0NvbXBvbmVudH0gZnJvbSBcIi4vYm9ycm93ZXItZGV0YWlscy9ib3Jyb3dlci1kZXRhaWxzLmNvbXBvbmVudFwiO1xuXG5jb25zdCByb3V0ZXM6IFJvdXRlcyA9IFtcbiAgICB7IHBhdGg6IFwiXCIsIHJlZGlyZWN0VG86IFwiL2Rhc2hib2FyZFwiLCBwYXRoTWF0Y2g6IFwiZnVsbFwiIH0sXG4gICAgeyBwYXRoOiBcImRhc2hib2FyZFwiLCBjb21wb25lbnQ6IERhc2hib2FyZENvbXBvbmVudH0sXG4gICAgeyBwYXRoOiBcImJvcnJvd2VyLWxpc3RcIiwgY29tcG9uZW50OiBCb3Jyb3dlckxpc3RDb21wb25lbnR9LFxuICAgIHsgcGF0aDogXCJuZXctYm9ycm93ZXItbGlzdFwiLCBjb21wb25lbnQ6IE5ld0JvcnJvd2VyTGlzdENvbXBvbmVudH0sXG4gICAgeyBwYXRoOiBcImFkZC10cmFuc2FjdGlvbi86bmFtZS86bW9kZVwiLCBjb21wb25lbnQ6IEFkZFRyYW5zYWN0aW9uQ29tcG9uZW50fSxcbiAgICB7IHBhdGg6IFwiYm9ycm93ZXItZGV0YWlscy86bmFtZVwiLCBjb21wb25lbnQ6IEJvcnJvd2VyRGV0YWlsc0NvbXBvbmVudH0sXG4gICAgeyBwYXRoOiBcIml0ZW1zXCIsIGNvbXBvbmVudDogSXRlbXNDb21wb25lbnQgfSxcbiAgICB7IHBhdGg6IFwiaXRlbXMvaXRlbS86aWRcIiwgY29tcG9uZW50OiBJdGVtRGV0YWlsQ29tcG9uZW50IH0sXG5dO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUuZm9yUm9vdChyb3V0ZXMpXSxcbiAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBBcHBSb3V0aW5nTW9kdWxlIHsgfSJdfQ==